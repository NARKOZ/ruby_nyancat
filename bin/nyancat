#!/usr/bin/env ruby

#  Copyright (c) 2011 Ben Arblaster.  All rights reserved.
#  Copyright (c) 2011 Kevin Lange.  All rights reserved.
# 
#  Original implementation Developed by: Kevin Lange
#                http://github.com/klange/nyancat
#  Ruby port by: Ben Arblaster
#                http://github.com/andatche/ruby_nyancat
# 
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to
#  deal with the Software without restriction, including without limitation the
#  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
#  sell copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#    1. Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimers.
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimers in the
#       documentation and/or other materials provided with the distribution.
#    3. Neither the names of the Association for Computing Machinery, Kevin
#       Lange, nor the names of its contributors may be used to endorse
#       or promote products derived from this Software without specific prior
#       written permission.
# 
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
#  CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
#  WITH THE SOFTWARE.

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'nyancat'
require 'optparse'

port = 23
telnet = false
options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: nyancat [options]"

  opts.on("-s", "--silent", "Don't play audio") do |s|
    options[:mute] = s
  end
  opts.on("-f", "--flavour FLAVOUR", "Available flavours: #{NyanCat.flavours.join(', ')}") do |f|
    options[:flavour] = f
  end
  opts.on("-n", "--notime", "Don't show the time nyaned") do |n|
    options[:hide_time] = n
  end
  opts.on("-l", "--listen [PORT]", "Run telnet server on PORT (default 21)") do |p|
    telnet = true
    port = p || 23
  end
  opts.on("-t", "--timeout SECONDS", "Timeout after SECONDS") do |t|
    options[:timeout] = t.to_i
  end
end.parse!

if telnet
  begin
    # Start a new server listening on specified port
    server = NyanCat::NyanServer.new(port, "::", options)
    server.audit = true
    server.start
    server.join
  rescue SignalException => e
    # Do nothing, exit gracefully
  ensure
    server.stop
  end
else
  stdout = IO.new STDOUT.fileno

  # Get TTY size
  options[:width], options[:height] = `stty size`.split.map { |x| x.to_i }.reverse

  begin
    n = NyanCat::NyanCat.new(stdout, options)
    n.run
  rescue SignalException => e
    # Do nothing, exit gracefully
  rescue Exception => e
    puts "Oops, something went wrong..."
    raise e
  end
end



